events {}

http {
  server {

    server_name pca.pcl.co.tz;
    location / {
      proxy_pass http://odoo_pca:8069;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
  
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/pca.pcl.co.tz/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/pca.pcl.co.tz/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    location /longpolling {
      proxy_pass http://odoo_pca:8072;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

}

  server {

    server_name pcb.pcl.co.tz;
    location / {
      proxy_pass http://odoo_pcb:8069;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
  
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/pca.pcl.co.tz/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/pca.pcl.co.tz/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    location /longpolling {
      proxy_pass http://odoo_pcb:8072;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }


}

  server {

    server_name pcc.pcl.co.tz;
    location / {
      proxy_pass http://odoo_pcc:8069;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
  
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/pca.pcl.co.tz/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/pca.pcl.co.tz/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    location /longpolling {
      proxy_pass http://odoo_pcc:8072;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }    

}

    # Portainer Server Block
    server {
    server_name portainer.pcl.co.tz;

    location / {
        proxy_pass http://odoo_portainer:9000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Additional proxy settings for WebSocket support (if needed)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/portainer.pcl.co.tz/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/portainer.pcl.co.tz/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
    }



  server {
    if ($host = pca.pcl.co.tz) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;

    server_name pca.pcl.co.tz;
    return 404; # managed by Certbot


}

  server {
    if ($host = pcb.pcl.co.tz) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;

    server_name pcb.pcl.co.tz;
    return 404; # managed by Certbot


}

  server {
    if ($host = pcc.pcl.co.tz) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;

    server_name pcc.pcl.co.tz;
    return 404; # managed by Certbot


}

  server {
    listen 80;
    server_name portainer.pcl.co.tz;
    return 301 https://$host$request_uri;
  }

}